# coding: utf-8

"""
    Qase.io API

    Qase API Specification.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: support@qase.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SharedStepSteps(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'data': 'str',
        'hash': 'str',
        'action': 'str',
        'expected_result': 'str',
        'attachments': 'list[AttachmentHash]'
    }

    attribute_map = {
        'data': 'data',
        'hash': 'hash',
        'action': 'action',
        'expected_result': 'expected_result',
        'attachments': 'attachments'
    }

    def __init__(self, data=None, hash=None, action=None, expected_result=None, attachments=None):  # noqa: E501
        """SharedStepSteps - a model defined in Swagger"""  # noqa: E501
        self._data = None
        self._hash = None
        self._action = None
        self._expected_result = None
        self._attachments = None
        self.discriminator = None
        if data is not None:
            self.data = data
        if hash is not None:
            self.hash = hash
        if action is not None:
            self.action = action
        if expected_result is not None:
            self.expected_result = expected_result
        if attachments is not None:
            self.attachments = attachments

    @property
    def data(self):
        """Gets the data of this SharedStepSteps.  # noqa: E501


        :return: The data of this SharedStepSteps.  # noqa: E501
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SharedStepSteps.


        :param data: The data of this SharedStepSteps.  # noqa: E501
        :type: str
        """

        self._data = data

    @property
    def hash(self):
        """Gets the hash of this SharedStepSteps.  # noqa: E501


        :return: The hash of this SharedStepSteps.  # noqa: E501
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this SharedStepSteps.


        :param hash: The hash of this SharedStepSteps.  # noqa: E501
        :type: str
        """

        self._hash = hash

    @property
    def action(self):
        """Gets the action of this SharedStepSteps.  # noqa: E501


        :return: The action of this SharedStepSteps.  # noqa: E501
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this SharedStepSteps.


        :param action: The action of this SharedStepSteps.  # noqa: E501
        :type: str
        """

        self._action = action

    @property
    def expected_result(self):
        """Gets the expected_result of this SharedStepSteps.  # noqa: E501


        :return: The expected_result of this SharedStepSteps.  # noqa: E501
        :rtype: str
        """
        return self._expected_result

    @expected_result.setter
    def expected_result(self, expected_result):
        """Sets the expected_result of this SharedStepSteps.


        :param expected_result: The expected_result of this SharedStepSteps.  # noqa: E501
        :type: str
        """

        self._expected_result = expected_result

    @property
    def attachments(self):
        """Gets the attachments of this SharedStepSteps.  # noqa: E501


        :return: The attachments of this SharedStepSteps.  # noqa: E501
        :rtype: list[AttachmentHash]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this SharedStepSteps.


        :param attachments: The attachments of this SharedStepSteps.  # noqa: E501
        :type: list[AttachmentHash]
        """

        self._attachments = attachments

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SharedStepSteps, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SharedStepSteps):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
